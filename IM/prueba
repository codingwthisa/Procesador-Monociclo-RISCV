#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2009.vpi";
S_000001a8c91e86b0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_000001a8c91e9ef0 .scope module, "IM_Tb" "IM_Tb" 3 1;
 .timescale 0 0;
v000001a8c93436b0_0 .var "address_tb", 31 0;
v000001a8c9343750_0 .net "instruction_tb", 31 0, v000001a8c91ecfb0_0;  1 drivers
S_000001a8c91eba30 .scope module, "IM_inst" "IM" 3 5, 4 1 0, S_000001a8c91e9ef0;
 .timescale 0 0;
    .port_info 0 /INPUT 32 "address";
    .port_info 1 /OUTPUT 32 "instruction";
v000001a8c9312910_0 .net "address", 31 0, v000001a8c93436b0_0;  1 drivers
v000001a8c91ea080 .array "ins_mem", 31 0, 7 0;
v000001a8c91ecfb0_0 .var "instruction", 31 0;
v000001a8c91ed050_0 .var "out1", 7 0;
v000001a8c91ed0f0_0 .var "out2", 7 0;
v000001a8c91ed190_0 .var "out3", 7 0;
v000001a8c9343610_0 .var "out4", 7 0;
v000001a8c91ea080_0 .array/port v000001a8c91ea080, 0;
v000001a8c91ea080_1 .array/port v000001a8c91ea080, 1;
v000001a8c91ea080_2 .array/port v000001a8c91ea080, 2;
E_000001a8c9348b90/0 .event anyedge, v000001a8c9312910_0, v000001a8c91ea080_0, v000001a8c91ea080_1, v000001a8c91ea080_2;
v000001a8c91ea080_3 .array/port v000001a8c91ea080, 3;
v000001a8c91ea080_4 .array/port v000001a8c91ea080, 4;
v000001a8c91ea080_5 .array/port v000001a8c91ea080, 5;
v000001a8c91ea080_6 .array/port v000001a8c91ea080, 6;
E_000001a8c9348b90/1 .event anyedge, v000001a8c91ea080_3, v000001a8c91ea080_4, v000001a8c91ea080_5, v000001a8c91ea080_6;
v000001a8c91ea080_7 .array/port v000001a8c91ea080, 7;
v000001a8c91ea080_8 .array/port v000001a8c91ea080, 8;
v000001a8c91ea080_9 .array/port v000001a8c91ea080, 9;
v000001a8c91ea080_10 .array/port v000001a8c91ea080, 10;
E_000001a8c9348b90/2 .event anyedge, v000001a8c91ea080_7, v000001a8c91ea080_8, v000001a8c91ea080_9, v000001a8c91ea080_10;
v000001a8c91ea080_11 .array/port v000001a8c91ea080, 11;
v000001a8c91ea080_12 .array/port v000001a8c91ea080, 12;
v000001a8c91ea080_13 .array/port v000001a8c91ea080, 13;
v000001a8c91ea080_14 .array/port v000001a8c91ea080, 14;
E_000001a8c9348b90/3 .event anyedge, v000001a8c91ea080_11, v000001a8c91ea080_12, v000001a8c91ea080_13, v000001a8c91ea080_14;
v000001a8c91ea080_15 .array/port v000001a8c91ea080, 15;
v000001a8c91ea080_16 .array/port v000001a8c91ea080, 16;
v000001a8c91ea080_17 .array/port v000001a8c91ea080, 17;
v000001a8c91ea080_18 .array/port v000001a8c91ea080, 18;
E_000001a8c9348b90/4 .event anyedge, v000001a8c91ea080_15, v000001a8c91ea080_16, v000001a8c91ea080_17, v000001a8c91ea080_18;
v000001a8c91ea080_19 .array/port v000001a8c91ea080, 19;
v000001a8c91ea080_20 .array/port v000001a8c91ea080, 20;
v000001a8c91ea080_21 .array/port v000001a8c91ea080, 21;
v000001a8c91ea080_22 .array/port v000001a8c91ea080, 22;
E_000001a8c9348b90/5 .event anyedge, v000001a8c91ea080_19, v000001a8c91ea080_20, v000001a8c91ea080_21, v000001a8c91ea080_22;
v000001a8c91ea080_23 .array/port v000001a8c91ea080, 23;
v000001a8c91ea080_24 .array/port v000001a8c91ea080, 24;
v000001a8c91ea080_25 .array/port v000001a8c91ea080, 25;
v000001a8c91ea080_26 .array/port v000001a8c91ea080, 26;
E_000001a8c9348b90/6 .event anyedge, v000001a8c91ea080_23, v000001a8c91ea080_24, v000001a8c91ea080_25, v000001a8c91ea080_26;
v000001a8c91ea080_27 .array/port v000001a8c91ea080, 27;
v000001a8c91ea080_28 .array/port v000001a8c91ea080, 28;
v000001a8c91ea080_29 .array/port v000001a8c91ea080, 29;
v000001a8c91ea080_30 .array/port v000001a8c91ea080, 30;
E_000001a8c9348b90/7 .event anyedge, v000001a8c91ea080_27, v000001a8c91ea080_28, v000001a8c91ea080_29, v000001a8c91ea080_30;
v000001a8c91ea080_31 .array/port v000001a8c91ea080, 31;
E_000001a8c9348b90/8 .event anyedge, v000001a8c91ea080_31, v000001a8c91ed050_0, v000001a8c91ed0f0_0, v000001a8c91ed190_0;
E_000001a8c9348b90/9 .event anyedge, v000001a8c9343610_0;
E_000001a8c9348b90 .event/or E_000001a8c9348b90/0, E_000001a8c9348b90/1, E_000001a8c9348b90/2, E_000001a8c9348b90/3, E_000001a8c9348b90/4, E_000001a8c9348b90/5, E_000001a8c9348b90/6, E_000001a8c9348b90/7, E_000001a8c9348b90/8, E_000001a8c9348b90/9;
S_000001a8c91ece20 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 14, 4 14 0, S_000001a8c91eba30;
 .timescale 0 0;
v000001a8c9313320_0 .var/2s "i", 31 0;
    .scope S_000001a8c91eba30;
T_0 ;
    %vpi_call/w 4 10 "$readmemb", "instructions.txt", v000001a8c91ea080 {0 0 0};
    %vpi_call/w 4 13 "$display", "Contenido del archivo de instrucciones (en formato binario):" {0 0 0};
    %fork t_1, S_000001a8c91ece20;
    %jmp t_0;
    .scope S_000001a8c91ece20;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a8c9313320_0, 0, 32;
T_0.0 ;
    %load/vec4 v000001a8c9313320_0;
    %cmpi/s 32, 0, 32;
    %jmp/0xz T_0.1, 5;
    %vpi_call/w 4 15 "$display", "Instrucci\303\263n %0d: %b", v000001a8c9313320_0, &A<v000001a8c91ea080, v000001a8c9313320_0 > {0 0 0};
    %load/vec4 v000001a8c9313320_0;
    %addi 1, 0, 32;
    %cast2;
    %store/vec4 v000001a8c9313320_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_000001a8c91eba30;
t_0 %join;
    %end;
    .thread T_0;
    .scope S_000001a8c91eba30;
T_1 ;
    %wait E_000001a8c9348b90;
    %ix/getv 4, v000001a8c9312910_0;
    %load/vec4a v000001a8c91ea080, 4;
    %store/vec4 v000001a8c91ed050_0, 0, 8;
    %load/vec4 v000001a8c9312910_0;
    %addi 1, 0, 32;
    %ix/vec4 4;
    %load/vec4a v000001a8c91ea080, 4;
    %store/vec4 v000001a8c91ed0f0_0, 0, 8;
    %load/vec4 v000001a8c9312910_0;
    %addi 2, 0, 32;
    %ix/vec4 4;
    %load/vec4a v000001a8c91ea080, 4;
    %store/vec4 v000001a8c91ed190_0, 0, 8;
    %load/vec4 v000001a8c9312910_0;
    %addi 3, 0, 32;
    %ix/vec4 4;
    %load/vec4a v000001a8c91ea080, 4;
    %store/vec4 v000001a8c9343610_0, 0, 8;
    %load/vec4 v000001a8c91ed050_0;
    %load/vec4 v000001a8c91ed0f0_0;
    %concat/vec4; draw_concat_vec4
    %load/vec4 v000001a8c91ed190_0;
    %concat/vec4; draw_concat_vec4
    %load/vec4 v000001a8c9343610_0;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v000001a8c91ecfb0_0, 0, 32;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_000001a8c91e9ef0;
T_2 ;
    %vpi_call/w 3 11 "$dumpfile", "IM_tb.vcd" {0 0 0};
    %vpi_call/w 3 12 "$dumpvars", 32'sb00000000000000000000000000000000, S_000001a8c91e9ef0 {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000001a8c93436b0_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 4, 0, 32;
    %store/vec4 v000001a8c93436b0_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 8, 0, 32;
    %store/vec4 v000001a8c93436b0_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 12, 0, 32;
    %store/vec4 v000001a8c93436b0_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 16, 0, 32;
    %store/vec4 v000001a8c93436b0_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 20, 0, 32;
    %store/vec4 v000001a8c93436b0_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 24, 0, 32;
    %store/vec4 v000001a8c93436b0_0, 0, 32;
    %delay 10, 0;
    %pushi/vec4 28, 0, 32;
    %store/vec4 v000001a8c93436b0_0, 0, 32;
    %delay 10, 0;
    %vpi_call/w 3 38 "$finish" {0 0 0};
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "IM_Tb.sv";
    "IM.sv";
